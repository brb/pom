#!/bin/sh

# TODO:
#   - support for tags and comments
#   - flock

set -u

DB="$HOME/.pom.dat"
DURATION=$((25 * 60)) # 25 minutes

function usage() {
    cat >&2 <<EOF
Usage:
    pom start
    pom abort
    pom status
EOF
    exit 1
}

function ensure_db() {
    [ -f "$DB" ] || touch "$DB"
}

function ensure_running() {
    local POM=$(tail -n1 "$DB")
    [[ -z "$POM" ]] || echo "$POM" | grep -q -v "start" && echo "not started" >&2 && exit 1
}

function start() {
    ensure_db

    echo "start=$(date +%s)" >> $DB
    nohup sh -c "sleep $DURATION && $0 finish" >/dev/null 2>&1 &
    notify-send "pom: starting"
}

function abort() {
    ensure_db
    ensure_running

    pkill -f 'pom finish'
    echo "abort=$(date +%s)" >> $DB
    notify-send "pom: aborted"
}

function status() {
    ensure_db

    local POM=$(tail -n1 "$DB")
    [[ -z "$POM" ]] || echo "$POM" | grep -q -E "abort|end" && echo "NA" && exit 0

    local START=$(echo "$POM" | grep -o -E "start=([0-9]*)" | sed "s/start=//")
    local NOW=$(date +%s)
    local DIFF=$(($NOW - $START))

    echo "$((($DURATION - $DIFF) / 60)) min left"
}

function finish() {
    ensure_db
    ensure_running

    notify-send "pom: finished"
    echo "end=$(date +%s)" >> $DB
}

[ $# -gt 0 ] || usage

CMD=$1
shift 1

case "$CMD" in
    start)
        start
        ;;
    abort)
        abort
        ;;
    status)
        status
        ;;
    finish)
        finish
        ;;
    *)
        usage
        ;;
esac
